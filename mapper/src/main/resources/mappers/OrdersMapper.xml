<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lendSys.dao.OrdersMapper">
    <resultMap id="BaseResultMap" type="com.lendSys.entity.Orders">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="order_status" jdbcType="INTEGER" property="orderStatus"/>
        <result column="order_remark" jdbcType="INTEGER" property="orderRemark"/>
        <result column="product_id" jdbcType="INTEGER" property="productId"/>
        <result column="cart_num" jdbcType="INTEGER" property="cartNum"/>
        <result column="start_date" jdbcType="TIMESTAMP" property="startDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="length" jdbcType="INTEGER" property="length"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
    </resultMap>

    <select id="selectbyUserName" resultMap="BaseResultMap">
        select order_id,
               user_id,
               order_status,
               order_remark,
               product_id,
               cart_num,
               start_date,
               end_date,
               length,
               product_name
        from orders
                 inner join users on userId = user_id
        where userName = #{username}
    </select>

    <select id="waitForCollect" resultMap="BaseResultMap">
        select order_id,
               user_id,
               order_status,
               order_remark,
               product_id,
               cart_num,
               start_date,
               end_date,
               length,
               product_name
        from orders
        where order_status = 2
    </select>

    <select id="waitForApproval" resultMap="BaseResultMap">
        select order_id,
               user_id,
               order_status,
               order_remark,
               product_id,
               cart_num,
               start_date,
               end_date,
               length,
               product_name
        from orders
        where user_id in
              (select userId
               from users
               where departmentId = (select departmentId from users where username = #{username})
                 and user_level = (select user_level from users where username = #{username}) + 1
              )
          and order_status = 1
    </select>

    <select id="selectByStatus" resultMap="BaseResultMap">
        select order_id,
               user_id,
               order_status,
               order_remark,
               product_id,
               cart_num,
               start_date,
               end_date,
               length,
               product_name
        from orders
        where user_id =
              (select userId
               from users
               where username = #{username})
          and order_status = #{orderStatus}
    </select>

</mapper>